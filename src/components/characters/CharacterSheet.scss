@import "../../variables.scss";

.distinction-item {
  background: var(--primary-gradient) !important;
  margin: 0.5em;
  border-radius: 8px !important;
  padding: 1em !important;
  box-sizing: border-box !important; /* Ensure padding stays inside the element */
}

.flex-row {
  display: flex;
  flex-wrap: wrap; /* Allows items to wrap to the next row */
  justify-content: space-around; /* Adds equal space around each item */
  gap: 1em; /* Adds spacing between rows (optional) */
}

.diamond {
  width: 50px !important; /* Adjust as needed */
  height: 50px !important; /* Adjust as needed */
  background-color: var(
    --dark-color
  ) !important; /* Change to your desired background color */
  color: var(--primary-color) !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  transform: rotate(
    45deg
  ) !important; /* Rotates the square to appear as a diamond */
  font-size: 1.5rem !important;
  font-weight: bold !important;
  margin: 0 auto !important; /* Centers the diamond in the column */
}

.triangle {
  position: relative;
  width: 0;
  height: 0;
  border-left: 25px solid transparent; /* Adjust size */
  border-right: 25px solid transparent;
  border-bottom: 50px solid var(--dark-color); /* Use your variable here */
  text-align: center;
  display: inline-block;
  margin: 20px; /* Optional spacing */
  color: var(--primary-color); /* Text color from variable */
  font-size: 16px; /* Adjust as needed */
}

.triangle {
  position: relative;
  width: 0;
  height: 0;
  border-left: 25px solid transparent; /* Triangle sides */
  border-right: 25px solid transparent;
  border-bottom: 50px solid var(--dark-color); /* Triangle background */
}

.triangle-content {
  position: absolute; /* Position text relative to the triangle */
  top: 65%; /* Adjust for the triangle's shape */
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--primary-color); /* Text color */
  font-size: 16px; /* Adjust as needed */
  font-weight: bold; /* Make the text stand out */
  text-align: center;
}

.square {
  width: 50px; /* Adjust size */
  height: 50px;
  background-color: var(--dark-color);
  color: var(--primary-color);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  font-weight: bold;
  margin: 0 auto;
  text-align: center;
}
.hexagon {
  width: 50px; /* Adjust width */
  height: 30px; /* Adjust height */
  background-color: var(--dark-color);
  position: relative;
  margin: 0 auto;
  margin-top: 5px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--primary-color);
  font-size: 1.5rem;
  font-weight: bold;
  text-align: center;
}

.hexagon::before,
.hexagon::after {
  content: "";
  position: absolute;
  width: 0;
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
}

.hexagon::before {
  bottom: 100%;
  border-bottom: 15px solid var(--dark-color);
}

.hexagon::after {
  top: 100%;
  border-top: 15px solid var(--dark-color);
}

/* Rotate the text back to normal */
.diamond > * {
  transform: rotate(-45deg) !important;
}

.btn-edit {
  background-color: var(--primary-color) !important;
  color: var(--dark-color) !important;
  border: none !important;
  transition: background-color 0.3s ease, transform 0.3s ease !important;
}

.btn-edit:hover {
  background-color: var(--secondary-color) !important;
  color: var(--dark-color) !important;
  border: none !important;
  transform: scale(1.25) !important;
}

.btn-edit:active {
  background-color: var(--secondary-color) !important;
  color: var(--dark-color) !important;
  border: none !important;
  transform: scale(1.25) !important;
}

.btn-plus {
  background-color: #00000000 !important;
  color: var(--dark-color) !important;
  border: none !important;
  font-size: 1.5em !important;
  transition: background-color 0.3s ease, transform 0.3s ease !important;
}

.btn-plus:hover {
  background-color: #00000000 !important;
  color: var(--dark-color) !important;
  border: none !important;
  transform: scale(1.25) !important;
}

.btn-plus:active {
  background-color: #00000000 !important;
  color: var(--dark-color) !important;
  border: none !important;
  transform: scale(1.25) !important;
}

/* Dark Variant for .btn-edit */
.btn-edit-dark {
  background-color: var(
    --dark-color
  ) !important; /* Use dark color for the background */
  color: var(--primary-color) !important; /* Use light color for the text */
  border: none !important;
  transition: background-color 0.3s ease, transform 0.3s ease !important;
}

.btn-edit-dark:hover {
  background-color: var(
    --dark-color-transparent
  ) !important; /* Dark color with transparency for hover effect */
  color: var(
    --primary-color
  ) !important; /* Add a slight pop with primary color for hover */
  border: none !important;
  transform: scale(1.25) !important;
}

/* Dark Variant for .btn-plus */
.btn-plus-dark {
  background-color: transparent !important; /* Keep transparent for a subtle look */
  color: var(--light-color) !important; /* Light color for better contrast */
  border: none !important;
  font-size: 1.5em !important;
  transition: background-color 0.3s ease, transform 0.3s ease !important;
}

.btn-plus-dark:hover {
  background-color: var(
    --dark-color-transparent
  ) !important; /* Dark color with some transparency for a subtle hover effect */
  color: var(
    --secondary-color
  ) !important; /* Secondary color for an interactive feel */
  border: none !important;
  transform: scale(1.25) !important;
}

.plot-points {
  font-size: 2em !important; /* Sets the size of the font */
  color: var(
    --primary-color
  ) !important; /* Uses the primary color for the text */
  background-color: var(
    --dark-color
  ) !important; /* Uses the dark color for the background */
  width: 1.5em !important; /* Ensure the width and height are the same to create a circle */
  border-radius: 50% !important; /* Makes it a perfect circle */
  display: flex !important; /* Flex to center the text */
  align-items: center !important; /* Vertically centers the text */
  justify-content: center !important; /* Horizontally centers the text */
  text-align: center !important; /* Centers text in the case of multiline (just in case) */
  margin: 0.5em !important; /* Adds a little space around it */
}

.btn-plus-dark:active {
  background-color: var(
    --dark-color
  ) !important; /* Full dark color for active state */
  color: var(
    --primary-color
  ) !important; /* Primary color to emphasize active state */
  border: none !important;
  transform: scale(1.25) !important;
}

.accordion {
  background-color: var(--dark-color); // Background for the entire Accordion
  // Add a border
  border-radius: 8px;
  margin-top: 5px;
  box-shadow: 0 0 5px var(--primary-color);

  .accordion-item {
    background-color: var(
      --secondary-gradient-transparent
    ); // Gradient for items
    border: none;

    &.active {
      // Style for active items
      background-color: var(--primary-color);
    }
  }

  .accordion-header {
    background-color: #00000000 !important;
    color: var(--primary-color);
    font-size: 1.25rem;
    padding: 0.75rem 1rem;

    &:hover {
      background-color: var(--primary-gradient-hover);
      color: var(--dark-color);
    }
  }

  .accordion-body {
    background-color: var(--dark-color);
    color: var(--light-color);
    border-top: 1px solid var(--primary-color);
    padding: 1rem;
  }
}

.accordion-button {
  background-color: var(--primary-color); // Background color of the button
  color: var(--primary-color); // Text color
  border: solid 1px var(--primary-color) !important;
  font-size: 1.25rem; // Adjust font size
  padding: 0.75rem 1rem; // Adjust padding
  box-shadow: 0 0 5px 2px var(--primary-color);
  // Rounded corners and shadow
  border-radius: 0.5rem;

  &:hover {
    background-color: var(--primary-gradient-hover); // Hover effect
    color: var(--dark-color); // Text color on hover
  }

  &:focus {
    outline: none; // Remove focus outline
    box-shadow: 0 0 5px 2px var(--primary-color); // Add a focus glow
  }

  &::after {
    transform: scale(1.2); // Make the icon larger
  }

  // When the accordion is expanded
  &.collapsed {
    background-color: var(
      --primary-gradient-active
    ) !important; // Background for collapsed state
    color: var(--light-color); // Text color for collapsed state
  }
}

.accordion-button:not(.collapsed) {
  background-color: var(
    --primary-color
  ) !important; // Background for active state
  color: var(--dark-color) !important; // Text color for active state
  border: none !important;
  box-shadow: none !important;
}

.value-item {
  background: var(--primary-gradient);
  border-radius: 8px;
}

.value-description {
  color: var(--dark-color);
  font-size: 1.25em;
}
